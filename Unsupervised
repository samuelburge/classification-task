#Dimension of data (1000x784)
dim(y)
# Calculate column means
apply(y, 2, mean) 
# Calculate column variance
apply(y, 2, var)

#Perform PCA
pca.out=prcomp(y, scale=TRUE)
# 784 principal components
pca.out
# Biplot
biplot(pca.out, scale=0)

#Proportion of variance explained
pca.out$sdev
pr.var=pca.out$sdev^2
pr.var
pve=pr.var/sum(pr.var)
pve

#Plot of points for 2 components
Cols=function(vec){
  cols=rainbow(length(unique(vec)))
  return(cols[as.numeric(as.factor(vec))])
}
par(mfrow=c(1,2))
plot(pca.out$x[,1:2], col=Cols(y), pch=19,xlab="Z1",ylab="Z2")
plot(pca.out$x[,c(1,3)], col=Cols(y), pch=19,xlab="Z1",ylab="Z3")

# Create plot of PVE and cumulative PVE
par(mfrow=c(1,2))
plot(pve,  type="o", ylab="PVE", xlab="Principal Component", col="blue")
plot(cumsum(pve), type="o", ylab="Cumulative PVE", xlab="Principal Component", col="brown3")
cumsum(pve)
#Cut-off: 90%:187 95%:250 99%:382




# Optimal k using Total Within Sum of Squares (elbow plot)
install.packages("factoextra")
library(factoextra)
fviz_nbclust(y, kmeans, method = "wss")
# Optimal 7 clusters

#calculate gap statistic based on number of clusters
gap_stat <- clusGap(y,
                    FUN = kmeans,
                    nstart = 25,
                    K.max = 100,
                    B = 50)

fviz_gap_stat(gap_stat)


# Plot
km7 <- kmeans(y, centers = 7, nstart = 25)
fviz_cluster(km7, data = y)
km7
